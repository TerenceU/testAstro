---
// This is the main button component for the application.
export const prerender = false;
// Accept any props that are passed to the button element
const { isSkeleton = false, ...props } = Astro.props as Record<string, any>;   

// Set default attributes for the button if not provided
const defaultAttributes = {
  type: 'button',
  class: 'font-serif text-base leading-normal text-white bg-slate-700 p-5 space-x-5 space-y-5 tracking-wide shadow shadow-gray-500/80 border-gray-400/25 divide-x-14 border-t-6 border-l border-r-6 border-b hover:transform-none hover:transition-all hover:duration-200 hover:bg-gray-800 hover:shadow-lg hover:shadow-gray-600 hover:border',
};

props.type = props.type ?? defaultAttributes.type;

props.class = props.class ?? defaultAttributes.class;


props.class += isSkeleton ? ' bg-gray-200 text-gray-400 cursor-not-allowed animate-pulse hover:none' : ' hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500';

if(isSkeleton){
  //get the slot content and replace it with a lodigng text
  var slot = Astro.slots.render('default');
  
}

if (props.disabled) {
  props.class += ' cursor-not-allowed opacity-50';
}


const attributes = {
  ...props,
};

let Tag = 'button';
if(props.href) {
  props.type = 'link';
  props.class += ' inline-flex items-center justify-center';
  Tag = 'a';
}

---

<Tag {...attributes}>
  
    <slot />
</Tag>
